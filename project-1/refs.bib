@online{BasicAnalysisSpike,
  title = {Basic {{Analysis}} of {{Spike Train Data}}},
  url = {https://mark-kramer.github.io/Case-Studies-Python/08.html},
  urldate = {2025-02-18},
  abstract = {Basic Analysis of Spike Train Data}
}

@book{dayanTheoreticalNeuroscienceComputational2001,
  title = {Theoretical Neuroscience: Computational and Mathematical Modeling of Neural Systems},
  shorttitle = {Theoretical Neuroscience},
  author = {Dayan, Peter and Abbott, Laurence F.},
  date = {2001},
  series = {Computational Neuroscience},
  publisher = {MIT Press},
  location = {Cambridge, Mass.},
  isbn = {978-0-262-04199-7 978-0-262-54185-5},
  langid = {english},
  pagetotal = {460}
}

@book{gabbianiMathematicsNeuroscientists2010,
  title = {Mathematics for Neuroscientists},
  author = {Gabbiani, Fabrizio and Cox, Steven James},
  date = {2010},
  edition = {1st ed},
  publisher = {Elsevier/Academic Press},
  location = {Amsterdam},
  abstract = {This book provides a grounded introduction to the fundamental concepts of mathematics, neuroscience and their combined use, thus providing the reader with a springboard to cutting-edge research topics and fostering a tighter integration of mathematics and neuroscience for future generations of students. The book alternates between mathematical chapters, introducing important concepts and numerical methods, and neurobiological chapters, applying these concepts and methods to specific topics. It covers topics ranging from classical cellular biophysics and proceeding up to systems level neuroscience. Starting at an introductory mathematical level, presuming no more than calculus through elementary differential equations, the level will build up as increasingly complex techniques are introduced and combined with earlier ones. Each chapter includes a comprehensive series of exercises with solutions, taken from the set developed by the authors in their course lectures. MATLAB code is included for each computational figure, to allow the reader to reproduce them. Biographical notes referring the reader to more specialized literature and additional mathematical material that may be needed either to deepen the reader's understanding or to introduce basic concepts for less mathematically inclined readers completes each chapter. A very didactic and systematic introduction to mathematical concepts of importance for the analysis of data and the formulation of concepts based on experimental data in neuroscience. Provides introductions to linear algebra, ordinary and partial differential equations, Fourier transforms, probabilities and stochastic processes. Introduces numerical methods used to implement algorithms related to each mathematical concept. Illustrates numerical methods by applying them to specific topics in neuroscience, including Hodgkin-Huxley equations, probabilities to describe stochastic release, stochastic processes to describe noise in neurons, Fourier transforms to describe the receptive fields of visual neurons. Provides implementation examples in MATLAB code (which will be updated with additional code and in line with major MATLAB releases). Allows the mathematical novice to analyze their results in more sophisticated ways, and consider them in a broader theoretical framework},
  isbn = {978-0-12-374882-9},
  langid = {english}
}

@online{newmanIntroductionSpikeTrain2023,
  title = {Introduction to {{Spike Train Data}} — {{Neural Data Science}} in {{Python}}},
  author = {Newman, Aaron},
  date = {2023},
  url = {https://neuraldatascience.io/6-single_unit/intro_spike_trains.html},
  urldate = {2025-02-14},
  file = {C:\Users\jaeho\Zotero\storage\QKF8VA8X\intro_spike_trains.html}
}

@online{NumpyhistogramNumPyV22,
  title = {Numpy.Histogram — {{NumPy}} v2.2 {{Manual}}},
  url = {https://numpy.org/doc/stable/reference/generated/numpy.histogram.html},
  urldate = {2025-02-19},
  file = {C:\Users\jaeho\Zotero\storage\UV65SUS2\numpy.histogram.html}
}

@online{pythonFloatingPointArithmeticIssues2025,
  title = {Floating-{{Point Arithmetic}}: {{Issues}} and {{Limitations}}},
  shorttitle = {15. {{Floating-Point Arithmetic}}},
  author = {Python},
  date = {2025},
  url = {https://docs.python.org/3/tutorial/floatingpoint.html},
  urldate = {2025-02-16},
  abstract = {Floating-point numbers are represented in computer hardware as base 2 (binary) fractions. For example, the decimal fraction 0.625 has value 6/10 + 2/100 + 5/1000, and in the same way the binary fra...},
  langid = {english},
  organization = {Python documentation}
}
